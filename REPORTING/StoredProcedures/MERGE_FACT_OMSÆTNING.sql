CREATE PROCEDURE [REPORTING].[MERGE_FACT_OMSÆTNING]
AS 
BEGIN
IF OBJECT_ID('REPORTING.FACT_OMSÆTNING', 'U') IS NOT NULL 

PRINT ('MERGE FACT_OMSÆTNING');

MERGE [REPORTING].[FACT_OMSÆTNING] T
USING 
(
SELECT 
LINJE_NR,
FAKTURA_NR,
BOGFØRINGSDATO,
BESKRIVELSE,
KUNDE_ID,
RESSOURCEGROUP_ID,
ANTAL_ENHEDER,
ENHEDSPRIS,
BELØB_EKSKL_MOMS,
LINJE_RABAT,
LINJE_RABAT_BELØB,
LOAD_DATO
FROM BASELINE.FACT_OMSÆTNING_V
) S --SOURCE

ON S.LINJE_NR=T.LINJE_NR AND S.FAKTURA_NR=T.FAKTURA_NR

WHEN MATCHED THEN UPDATE SET 
T.BOGFØRINGSDATO=S.BOGFØRINGSDATO,
T.BESKRIVELSE=S.BESKRIVELSE,
T.KUNDE_ID=S.KUNDE_ID,
T.RESSOURCEGROUP_ID=S.RESSOURCEGROUP_ID,
T.ANTAL_ENHEDER=S.ANTAL_ENHEDER,
T.ENHEDSPRIS=S.ENHEDSPRIS,
T.BELØB_EKSKL_MOMS=S.BELØB_EKSKL_MOMS,
T.LINJE_RABAT=S.LINJE_RABAT,
T.LINJE_RABAT_BELØB=S.LINJE_RABAT_BELØB,
T.LOAD_DATO=S.LOAD_DATO

WHEN NOT MATCHED 
THEN INSERT 
(
LINJE_NR,
FAKTURA_NR,
BOGFØRINGSDATO,
BESKRIVELSE,
KUNDE_ID,
RESSOURCEGROUP_ID,
ANTAL_ENHEDER,
ENHEDSPRIS,
BELØB_EKSKL_MOMS,
LINJE_RABAT,
LINJE_RABAT_BELØB,
LOAD_DATO
)
VALUES 
(
S.LINJE_NR,
S.FAKTURA_NR,
S.BOGFØRINGSDATO,
S.BESKRIVELSE,
S.KUNDE_ID,
S.RESSOURCEGROUP_ID,
S.ANTAL_ENHEDER,
S.ENHEDSPRIS,
S.BELØB_EKSKL_MOMS,
S.LINJE_RABAT,
S.LINJE_RABAT_BELØB,
S.LOAD_DATO
)
WHEN NOT MATCHED BY SOURCE 
THEN DELETE
;
END;



