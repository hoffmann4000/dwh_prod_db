CREEATE PROCEDURE [REPORTING].[DELETE_INSERT_FACT_KPI_TIL_OG_AFGANG_KUNDER]
AS 
BEGIN
IF OBJECT_ID('REPORTING.FACT_KPI', 'U') IS NOT NULL 

PRINT 'Rows are deleted in REPORTING.FACT_KPI for two KPIs - Tilgang og afgang af kunder - number of added and departing customers';

            DELETE FROM REPORTING.FACT_KPI WHERE KPI_ID in (73, 72);
                         
PRINT 'the KPI for number of incoming customers "Tilgang af kunder" is inserted into REPORTING.FACT_KPI';
            
            INSERT INTO REPORTING.FACT_KPI (REALISERET, FORHANDLER_ID, DATE_ID, KPI_ID)
            
			SELECT ISNULL(B.TILGANG_KUNDER,0) AS REALISERET, A.FORHANDLER_ID, A.DATE_ID, A.KPI_ID
			FROM 
			--SURROGATE PRODUCT CONSISTING OF A KPI REF ID, TIME AND ALL PARTNERS 
				(
				SELECT 
				T.LASTDAYOFMONTH as DATE_ID, 
				72 AS KPI_ID,
				C.FORHANDLER_ID
				FROM BASELINE.LASTDAYOFMONTH_ONE_YEAR_BACK T 
				CROSS JOIN (SELECT DISTINCT FORHANDLER_ID FROM REPORTING.DIM_KUNDE WHERE KUNDEAKTIV=1) C
				) A
			LEFT JOIN 
			--ACTUAL DATA ON INCOMING CUSTOMERS PER PARTNER
				(
				SELECT COUNT(DISTINCT KUNDE_ID) AS TILGANG_KUNDER, EOMONTH(KUNDESTARTDATO) AS DATE_ID, FORHANDLER_ID
				FROM REPORTING.DIM_KUNDE K
				GROUP BY EOMONTH(K.KUNDESTARTDATO), K.FORHANDLER_ID
				) B
				
				ON A.DATE_ID=B.DATE_ID AND A.FORHANDLER_ID=B.FORHANDLER_ID;

PRINT 'the KPI for number of departing customers "Afgang af kunder" is inserted into REPORTING.FACT_KPI';

            INSERT INTO REPORTING.FACT_KPI (REALISERET, FORHANDLER_ID, DATE_ID, KPI_ID)
			SELECT ISNULL(B.AFGANG_KUNDER,0) AS REALISERET, A.FORHANDLER_ID, A.DATE_ID, A.KPI_ID
			FROM 
			--SURROGATE PRODUCT CONSISTING OF A KPI REF ID, TIME AND ALL PARTNERS 
				(
				SELECT 
				T.LASTDAYOFMONTH as DATE_ID, 
				73 AS KPI_ID,
				C.FORHANDLER_ID
				FROM BASELINE.LASTDAYOFMONTH_ONE_YEAR_BACK T 
				CROSS JOIN (SELECT DISTINCT FORHANDLER_ID FROM REPORTING.DIM_KUNDE WHERE KUNDEAKTIV=1) C
				) A
			LEFT JOIN 
			--ACTUAL DATA ON INCOMING CUSTOMERS PER PARTNER
				(
				SELECT COUNT (DISTINCT K.KUNDE_ID) AS AFGANG_KUNDER, EOMONTH(KUNDESLUTDATO) AS DATE_ID, K.FORHANDLER_ID
				FROM REPORTING.DIM_KUNDE K
                WHERE UPPER(KUNDENAVN) NOT LIKE '%KONKURS%'
                GROUP BY EOMONTH(KUNDESLUTDATO), k.FORHANDLER_ID
				) B
				
				ON A.DATE_ID=B.DATE_ID AND A.FORHANDLER_ID=B.FORHANDLER_ID;
/*
Christian 2021-01-17
Incoming customers is a simple count of distinct customers per. dealer per. month based on the column ADMIN.CUST.CREATED as displayed in REPORTING.DIM_KUNDE.
Departure of customers is calculated from REPORTING.DIM_KUNDE. The last table is constructed using ADMIN.CUST joined with ADMIN.CHURN, where an enddate is found 2016-01-01 

Business need for showing the value 0 for incoming af departing customers per dealer per month
therefore isnull and the join of the surrogate product
*/


END;